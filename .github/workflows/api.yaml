name: XD Banking App CI Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '**'
      - '*'

env:
  ARTIFACT_NAME: xd-banking-api

jobs:
  setup:
    name: Start Fianu Pipeline Session
    uses: fianulabs/tools/.github/workflows/pipeline.yaml@main
    secrets: inherit
    permissions:
      id-token: write
      contents: read
    with:
      app-code: dbx
      fianu-artifact: xd-banking-api

  variables:
    name: Set Runtime Variables
    runs-on: ubuntu-latest
    needs: [ setup ]
    outputs:
      artifact-name: ${{ steps.set-outputs.outputs.ARTIFACT_NAME }}
      artifact-version: ${{ steps.set-outputs.outputs.ARTIFACT_VERSION }}
    steps:
      - name: Outputs
        id: set-outputs
        run: |-
          echo "ARTIFACT_NAME=${{ env.ARTIFACT_NAME }}" >> $GITHUB_OUTPUT
          echo "ARTIFACT_VERSION=${{ needs.setup.outputs.version }}" >> $GITHUB_OUTPUT

  codescan:
    name: Sonarqube Codescan
    uses: fianulabs/tools/.github/workflows/codescan.yaml@main
    secrets: inherit
    permissions:
      id-token: write
      contents: read
    with:
      build-version: ${{ needs.variables.outputs.artifact-version }}
      working-directory: ./xd-banking-api
      artifact-name: ${{ needs.variables.outputs.artifact-name }}

  container:
    name: Build Container
    uses: fianulabs/tools/.github/workflows/container_build.yaml@main
    needs: [ variables ]
    secrets: inherit
    permissions:
      id-token: write
      contents: read
    with:
      build-version: ${{ needs.variables.outputs.artifact-version }}
      working-directory: ./xd-banking-api
      artifact-name: ${{ needs.variables.outputs.artifact-name }}
      build-path: ko://github.com/badgercorp/xd-banking-api/cmd/api

  sbom:
    name: Syft
    uses: fianulabs/tools/.github/workflows/syft.yaml@main
    needs: [ container, variables ]
    secrets: inherit
    with:
      working-directory: ./xd-banking-api
      oci-artifact: ${{ needs.variables.outputs.artifact-name }}:${{ needs.variables.outputs.artifact-version }}
      identifier: xd-banking-api

  sbom-evidence-capture:
    name: Capture SBOM Evidence
    runs-on: ubuntu-latest
    needs: [ sbom ]
    env:
      FIANU_ARTIFACT: ${{ inputs.oci-artifact }}
      FIANU_HOST: ${{ secrets.FIANU_HOST }}
      FIANU_USERNAME: ${{ secrets.FIANU_USERNAME }}
      FIANU_CLIENT_ID: ${{ secrets.FIANU_CLIENT_ID }}
      FIANU_CLIENT_SECRET: ${{ secrets.FIANU_CLIENT_SECRET }}
      FIANU_ASSET_TOKEN: ${{ secrets[format('{0}', inputs.token)] }}
    steps:
      - name: setup fianu cli
        uses: fianulabs/actions@main
        with:
          version: ${{ secrets.FIANU_VERSION }}

      - name: Download SBOM Results
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.sbom.outputs.sbom }}_xd-banking-api

      - name: Capture
        env:
          source: env-vars.yml
        run: |-
          fianu capture evidence --type sbom --source cli --input sbom.spdx.json

  sast:
    name: SAST
    uses: fianulabs/tools/.github/workflows/sast.yaml@main
    secrets: inherit
    needs: [ container ]
    with:
      working-directory: ./xd-banking-api
      project-type: golang
      go-version: 1.18

  sast-evidence-capture:
    name: Capture SAST Evidence
    runs-on: ubuntu-latest
    needs: [ sast ]
    env:
      FIANU_ARTIFACT: ${{ inputs.oci-artifact }}
      FIANU_HOST: ${{ secrets.FIANU_HOST }}
      FIANU_USERNAME: ${{ secrets.FIANU_USERNAME }}
      FIANU_CLIENT_ID: ${{ secrets.FIANU_CLIENT_ID }}
      FIANU_CLIENT_SECRET: ${{ secrets.FIANU_CLIENT_SECRET }}
      FIANU_ASSET_TOKEN: ${{ secrets[format('{0}', inputs.token)] }}
    steps:
      - name: setup fianu cli
        uses: fianulabs/actions@main
        with:
          version: ${{ secrets.FIANU_VERSION }}

      - name: Download SAST Results
        uses: actions/download-artifact@v3
        with:
          name: ${{needs.sast.outputs.snyk}}_golang

      - name: Capture
        env:
          source: env-vars.yml
        run: |-
          fianu capture evidence --input snyk_sast.json --type snyk --source sast --resource-uri https://app.snyk.io

  sca:
    name: Software Composition Analysis
    uses: fianulabs/tools/.github/workflows/sca.yaml@main
    secrets: inherit
    needs: [ container ]
    with:
      working-directory: ./xd-banking-api
      project-type: golang
      go-version: 1.18

  sca-evidence-capture:
    name: Capture Containerscan Evidence
    runs-on: ubuntu-latest
    needs: [ sca ]
    env:
      FIANU_ARTIFACT: ${{ inputs.oci-artifact }}
      FIANU_HOST: ${{ secrets.FIANU_HOST }}
      FIANU_USERNAME: ${{ secrets.FIANU_USERNAME }}
      FIANU_CLIENT_ID: ${{ secrets.FIANU_CLIENT_ID }}
      FIANU_CLIENT_SECRET: ${{ secrets.FIANU_CLIENT_SECRET }}
      FIANU_ASSET_TOKEN: ${{ secrets[format('{0}', inputs.token)] }}
    steps:
      - name: setup fianu cli
        uses: fianulabs/actions@main
        with:
          version: ${{ secrets.FIANU_VERSION }}

      - name: Download SBOM Results
        uses: actions/download-artifact@v3
        with:
          name: ${{needs.sca.outputs.snyk}}_golang

      - name: Capture
        env:
          source: env-vars.yml
        run: |-
          fianu capture evidence --input snyk_sca.json --type snyk --source ossdepscan --resource-uri https://app.snyk.io

  containerscan:
    name: Lacework
    uses: fianulabs/tools/.github/workflows/containerscan.yaml@main
    secrets: inherit
    needs: [ container, variables ]
    with:
      artifact-version: ${{ needs.variables.outputs.artifact-version }}
      working-directory: ./xd-banking-api
      artifact-name: ${{ needs.variables.outputs.artifact-name }}
      identifier: xd-banking-api

  containerscan-evidence-capture:
    name: Capture Containerscan Evidence
    runs-on: ubuntu-latest
    needs: [ containerscan ]
    env:
      FIANU_ARTIFACT: ${{ inputs.oci-artifact }}
      FIANU_HOST: ${{ secrets.FIANU_HOST }}
      FIANU_USERNAME: ${{ secrets.FIANU_USERNAME }}
      FIANU_CLIENT_ID: ${{ secrets.FIANU_CLIENT_ID }}
      FIANU_CLIENT_SECRET: ${{ secrets.FIANU_CLIENT_SECRET }}
      FIANU_ASSET_TOKEN: ${{ secrets[format('{0}', inputs.token)] }}
    steps:
      - name: setup fianu cli
        uses: fianulabs/actions@main
        with:
          version: ${{ secrets.FIANU_VERSION }}

      - name: Download SBOM Results
        uses: actions/download-artifact@v3
        with:
          name: ${{needs.containerscan.outputs.lacework}}_xd-banking-api

      - name: Capture
        env:
          source: env-vars.yml
        run: |-
          fianu capture evidence --type lacework --source inlinescan --resource-uri https://${{ secrets.LW_ACCOUNT_NAME }}.lacework.io --input lacework.json

  cosign:
    name: Cosign
    uses: fianulabs/tools/.github/workflows/cosign.yaml@main
    secrets: inherit
    needs: [ container, sbom, variables ]
    permissions:
      id-token: write
      contents: read
    with:
      working-directory: ./xd-banking-api
      oci-artifact: ${{ needs.variables.outputs.artifact-name }}:${{ needs.variables.outputs.artifact-version }}
      oci-artifact-name: ${{ needs.variables.outputs.artifact-name }}
      oci-artifact-digest: ${{ needs.container.outputs.digest }}
      identifier: xd-banking-api
      
      
  sbom-from-source-as-blob:
    name: SBOM From Source as Blob
    uses: fianulabs/tools/.github/workflows/sbom_from_source_as_blob.yaml@main
    needs: [ variables ]
    secrets: inherit
    permissions:
      id-token: write
      contents: read
    with:
      working-directory: ./xd-banking-api
      oci-artifact: ${{ needs.variables.outputs.artifact-name }}:${{ needs.variables.outputs.artifact-version }}
      oci-artifact-name: ${{ needs.variables.outputs.artifact-name }}
      oci-artifact-version: ${{ needs.variables.outputs.artifact-version }}

  container-attestations:
    name: Sbom Container Attestations
    uses: fianulabs/tools/.github/workflows/container_attestations.yaml@main
    secrets: inherit
    needs: [ container, variables ]
    permissions:
      id-token: write
      contents: read
    with:
      working-directory: ./xd-banking-api
      oci-artifact-digest: ${{ needs.container.outputs.digest }}
      oci-artifact: ${{ needs.variables.outputs.artifact-name }}:${{ needs.variables.outputs.artifact-version }}

  cosign-evidence-capture:
    name: Capture Signed Artifact Evidence
    runs-on: ubuntu-latest
    needs: [ cosign ]
    env:
      FIANU_ARTIFACT: ${{ inputs.oci-artifact }}
      FIANU_HOST: ${{ secrets.FIANU_HOST }}
      FIANU_USERNAME: ${{ secrets.FIANU_USERNAME }}
      FIANU_CLIENT_ID: ${{ secrets.FIANU_CLIENT_ID }}
      FIANU_CLIENT_SECRET: ${{ secrets.FIANU_CLIENT_SECRET }}
      FIANU_ASSET_TOKEN: ${{ secrets[format('{0}', inputs.token)] }}
    steps:
      - name: setup fianu cli
        uses: fianulabs/actions@main
        with:
          version: ${{ secrets.FIANU_VERSION }}

      - name: Download Cosign Results
        uses: actions/download-artifact@v3
        with:
          name: ${{needs.cosign.outputs.signature}}_xd-banking-api

      - name: Capture
        env:
          source: env-vars.yml
        run: |-
          fianu capture evidence --input cosign.json --type cosign --source container
          fianu capture evidence --input cosign.json --type cosign --source sbom

  stage-release:
    needs: [ container ]
    name: Release
    uses: fianulabs/tools/.github/workflows/release.yaml@main
    secrets: inherit
    permissions:
      id-token: write
      contents: read
    with:
      tag: ${{ needs.container.outputs.digest }}
      path: envs/rnd/values-image.yaml
      deploy: fianulabs/investments-unlimited-deploy